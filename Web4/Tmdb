rom fastapi import FastAPI
import requests

app = FastAPI()

# Chave de API para acessar a API externa
api_key = "6f77cb8794e999fed44476c8b3303723"
# Lista de gêneros de filmes
genres = [
  {'id': 28, 'name': 'Ação'},
  {'id': 12, 'name': 'Aventura'},
  {'id': 16, 'name': 'Animação'},
  {'id': 35, 'name': 'Comédia'},
  {'id': 80, 'name': 'Crime'},
  {'id': 99, 'name': 'Documentário'},
  {'id': 18, 'name': 'Drama'},
  {'id': 10751, 'name': 'Família'},
  {'id': 14, 'name': 'Fantasia'},
  {'id': 36, 'name': 'História'},
  {'id': 27, 'name': 'Terror'},
  {'id': 10402, 'name': 'Música'},
  {'id': 9648, 'name': 'Mistério'},
  {'id': 10749, 'name': 'Romance'},
  {'id': 878, 'name': 'Ficção Científica'},
  {'id': 10770, 'name': 'Filme de TV'},
  {'id': 53, 'name': 'Suspense'},
  {'id': 10752, 'name': 'Guerra'},
 {'id': 37, 'name': 'Faroeste'}
]

# Função para fazer uma solicitação HTTP e retornar JSON
def get_json(endpoint, params=None) : 
  """ fornecido o endpoint faz o request e retorna o resultado em json"""
  # endpoint = "https://api.themoviedb.org/3/discover/movie"
  # params = "?language=en&sort_by=vote_count.desc"
  url = f"{endpoint}{params}&api_key={api_key}"
  response = requests.get(url)
  return response.json()

# 1.a - Função para buscar o nome do gênero pelo ID fornecido
def get_genero_by_id(id):
  ids = []
  names = []
  if type(id) == list :
      ids = id
  else :
      ids.append(id)
  for genre in genres :
    if genre['id'] in ids :
      names.append(genre['name'])
  return names

# 1.b - Função para buscar um filme pelo título
def get_movie(movie : str) :  
  movie_title_lower = movie.lower()
  data = get_json(
    "https://api.themoviedb.org/3/search/movie",
    "?query=" + movie_title_lower + "&include_adult=true&language=en-US&sort_by=vote_count.desc"  
  )
    
  results = data['results']
  movie_title = []
  movie_id = []
  movie_popularity = []
 
  for result in results:
    result_movie_title = result['original_title']
    if movie_title_lower in result_movie_title.lower() :
      movie_title.append(result['original_title'])
      movie_id.append(result['id'])
      movie_popularity.append(result['popularity'])
      print(result['id'])
      print(result['original_title'])
      print(result['popularity'])

# 1.c - Função para buscar artista pelo nome
def get_actor(name : str) :
  name_lower = name.lower()
  data = get_json (
    "https://api.themoviedb.org/3/search/person",
    "?query=" + name + "&include_adult=false&language=en-US"
  )
  results = data['results']
  names = []
  ids = []
  popularity = []
  name_lower = name.lower()
  
  for result in results :
    result_name = result['name']
    if name_lower in result_name.lower() :
      names.append(result['name'])
      ids.append(result['id'])
      popularity.append(result['popularity'])
      print(result['id'])
      print(result['name'])
      print(result['popularity'])

# 2) Implementar API usando fastapi
# endpoint que retorna 5 filmes recomendados da semana
@app.get("/movies/week")
def get_best_movies_week() :
  data = get_json (
    "https://api.themoviedb.org/3/trending/movie/week",
    "?language=en-US"
  )
  
  results = data['results']
  week_best_movies = []
  
  for result in results :
    week_best_movies.append([result['title']])
  
  if week_best_movies :
    return week_best_movies[:5]
    # [:5] -> para mostrar os 5 primeiros 
  
  else :
    return {"error" : "not found"}

if __name__ == '__main__':
  # Chamando a função para buscar informações sobre o filme "Inception"
  get_movie('inception')
  # obeter o nome dos generos
  # Para acessar o endpoint da API: http://127.0.0.1:8000/movies/week
  # para startar o servidor uvicorn
  # uvicorn main:app --reload

